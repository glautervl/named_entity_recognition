# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from services.model import named_entity_recognition_rpc_pb2 as services_dot_model_dot_named__entity__recognition__rpc__pb2


class ShowMessageStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.show = channel.unary_unary(
        '/ShowMessage/show',
        request_serializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.OutputMessage.FromString,
        )


class ShowMessageServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def show(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ShowMessageServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'show': grpc.unary_unary_rpc_method_handler(
          servicer.show,
          request_deserializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShowMessage', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class RecognizeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.show = channel.unary_unary(
        '/Recognize/show',
        request_serializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.OutputMessage.FromString,
        )


class RecognizeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def show(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RecognizeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'show': grpc.unary_unary_rpc_method_handler(
          servicer.show,
          request_deserializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_named__entity__recognition__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Recognize', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
